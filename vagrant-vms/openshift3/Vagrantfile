# -*- mode: ruby -*-
# vi: set ft=ruby :

# Instructions from:
#    https://github.com/openshift/training/blob/master/beta-4-setup.md
#
# 192.168.133.2     ose3-master.example.com ose3-master
# 192.168.133.3     ose3-node1.example.com ose3-node1
# 192.168.133.4     ose3-node2.example.com ose3-node2
#
# Environment variables:
#   ACCESS_USERNAME   Username for the access portal (to subscribe your box)
#   ACCESS_PASSWORD   Password for the access portal (to subscribe your box)
#   POOL_ID           PoolID with the appropriate OpenSHift v3 Subscriptions  (to subscribe your box)

require 'vagrant-hostmanager'
require 'vagrant-registration'

Vagrant.configure(2) do |config|

  # Enable the vagrant-env plugin
  config.env.enable

  unless ENV.has_key?('ACCESS_USERNAME') && ENV.has_key?('ACCESS_PASSWORD') && ENV.has_key?('POOL_ID')
    puts "You have not defined all environment variables needed to bring up the Virtual Machines!"
    puts "Please read the README thoroughly"
    exit 1
  end

  # The number of minions to provision.
  num_nodes = (ENV['NUM_NODES'] || 2).to_i
  # IP configuration
  master_ip = "192.168.133.2"
  node_ip_base = "192.168.133."
  node_ips = num_nodes.times.collect { |n| node_ip_base + "#{n+3}" }
  node_ips_str = node_ips.join(",")

  #
  # Plugins configuration
  #
  # config.registration.skip = true
  config.registration.username = (ENV['ACCESS_USERNAME'] || "")
  config.registration.password = (ENV['ACCESS_PASSWORD'] || "")
  config.registration.auto_attach = false

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true


  #
  # Other configuration
  #
  poolID = ENV['POOL_ID']


  #
  # Box configuration
  #
  config.vm.box_check_update = false
  config.vm.box = "rhel-server-7"
  config.vm.synced_folder './', '/vagrant', type: 'rsync'

  #
  # virtualbox provider common settings
  #
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.cpus = 1
    vb.customize ["modifyvm", :id, "--memory", "1024"]
  end

  #
  # libvirt provider common settings
  #
  config.vm.provider "libvirt" do |libvirt|
    libvirt.driver = "kvm"
    libvirt.memory = 2048
    libvirt.cpus = 1
    libvirt.storage :file, :size => '12G', :device => 'vdb'
  end

  # OpenShift nodes
  num_nodes.times do |n|
    config.vm.define "ose3-node#{n+1}" do |node|
      node_index = n+1
      node_ip = node_ips[n]
      device = "/dev/vdb"

      # Specific Configuration Options for the VirtualBox Provider
      node.vm.provider "virtualbox" do |vb|
        disk_file = "./disks/docker-pool-disk-ose3-node#{node_index}.vdi"
        device = "/dev/sdb"
        unless File.exist?(disk_file)
          # Create a 10 GB (10*1024) disk for docker images
          vb.customize ['createhd', '--filename', disk_file, '--size', 10 * 1024]
        end
        # Attach the disk to the VM
        vb.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_file]
      end

      node.vm.hostname = "ose3-node#{node_index}"
      node.hostmanager.aliases = %W(ose3-node#{node_index}.example.com)
      node.vm.network "private_network", ip: "#{node_ip}", libvirt__network_name: "openshift3-beta0", libvirt__dhcp_enabled: false

      node.vm.provision "fix-hostmanager-bug", type: "shell", run: "always" do |s|
        s.inline = <<-EOT
          sudo restorecon /etc/hosts
          sudo chown root:root /etc/hosts
          EOT
      end

      node.vm.provision :shell, inline: "/vagrant/scripts/all.sh ose3-node#{node_index} 192.168.133.100 #{poolID} #{device}"
      node.vm.provision :shell, inline: "/vagrant/scripts/node.sh ose3-node#{node_index}"
#      node.vm.provision :shell, inline: "/vagrant/scripts/docker-images.sh"
    end
  end

  config.vm.define "ose3-master" do |master|
     master.vm.hostname = "ose3-master"
     master.hostmanager.aliases = %W(ose3-master.example.com)
     master.vm.network "private_network", ip: "192.168.133.2", libvirt__network_name: "openshift3-beta0", libvirt__dhcp_enabled: false
     device = "/dev/vdb"

     # Specific Configuration Options for the VirtualBox Provider
     master.vm.provider "virtualbox" do |vb|
       device = "/dev/sdb"
       disk_file = "./disks/docker-pool-disk-ose3-master.vdi"
       unless File.exist?(disk_file)
         # Create a 10 GB (10*1024) disk for docker images
         vb.customize ['createhd', '--filename', disk_file, '--size', 10 * 1024]
       end
       # Attach the disk to the VM
       vb.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_file]
     end

     master.vm.provision "fix-hostmanager-bug", type: "shell", run: "always" do |s|
       s.inline = <<-EOT
        sudo restorecon /etc/hosts
        sudo chown root:root /etc/hosts
        EOT
     end

     master.vm.provision :shell, inline: "/vagrant/scripts/all.sh ose3-master 192.168.133.100 #{poolID} #{device}"
     master.vm.provision :shell, inline: "/vagrant/scripts/master.sh"
#     master.vm.provision :shell, inline: "/vagrant/scripts/docker-images.sh"

  end


end
